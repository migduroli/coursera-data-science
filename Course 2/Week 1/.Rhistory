1/(1.069^2)
(1+0.069)^2/(1+0.063)-1
400*(1+0.08/4)^3
priceContract(10000,rateBorrow = 0.1,rateLend = 0.08)
priceContract(10000,rateBorrow = 0.1, rateLend = 0.08)
priceContract(10000,rateBorrow = 1, rateLend = 8)
priceContract(10000,rateBorrow = 0.1, rateLend = 0.08)
priceContract(10,rateBorrow = 0.1, rateLend = 0.08)
priceContract(c(10,10),rateBorrow = 0.1, rateLend = 0.08)
10000/(0.1)
10000/(0.08)
(10000/0.1)-(10000/(0.08))
(10000/(0.08))
1/(1+0.1)
1/(1+0.1/2)
100*(1+0.1*0.5)^2
125*(1+0.5*0.1)
0.952381*(131.25-110.25)
x = [1:10]
x = seq(1,10)
x
ChemicalPotential <- function(Rho, Temp)
{
(1-(rho/2))/((1-rho)^3)
}
ChemicalPotential(0.05, 0.5)
ChemicalPotential <- function(Rho, Temp)
{
(1-(Rho/2))/((1-Rho)^3)
}
ChemicalPotential(0.05, 0.5)
solver(ChemicalPotential,0.05, 0.4)
Pressure <- function(Rho, Temp, CP)
{}
Pressure <- function(Rho, Temp, CP)
{
1+log(Rho)+(1-(Rho/2))/((1-Rho)^3)
}
Pressure <- function(Rho, Temp, CP)
{
1+CP*log(Rho)+(1-(Rho/2))/((1-Rho)^3)
}
install.packages("tufte", type = "source")
install.packages("rticles", type = "source")
install.packages("tufte", type = "source")
install.packages("tufte")
getwd()
setwd("H:/coursera-data-science/Course 2/Week 1")
source("Example1.R")
cor(airquality)
x <- 5
x
x = 5
x
x = 10
x
x = 10 <- 2
(x = 10) <- 2
1:10
1:0.1:10
1:0.11:10
1:0.01:10
seq(1,10,by = 0.)
seq(1,10,by = 0.1)
?vector()
?vector
is.vector(x)
vector(length = 10)
x <- vector(length = 10)
x
x <- vector(mode ="list"length = 10)
x <- vector(mode ="list",length = 10)
cx
x
x <- vector(mode ="expression",length = 10)
x
x <- vector(mode ="symbol",length = 10)
x <- vector(mode ="double",length = 10)
x
x <- vector(mode ="double",length = 10)
x(1)
x[2]
x[1:10]
x[1:12]
x[1:15]
x
name(x)
dimname(x)
dim(x)
x <- 1:10
dim(x)
class(x)
lentght(x)
length(x)
attributes(x)
attributes("x2)
attributes("x")
attributes("x")
x <- 0:6
class(x) # integer
as.numeric(x)
as.logical(x)
as.character(x)
x <- list(1, "a", TRUE, 1+2i)
x
x[1]
x[1,1]
x[1][1]
x[1]
x[2]
x[2:1]
m <- matrix(nrow = 2, ncol = 3)
dim(m)
attributes(m)
m <- matrix(1:10, nrow = 2, ncol = 10)
m
m <- matrix(1:10, nrow = 2, ncol = 5)
m
dim(m) <- c(2,5)
m
dim(m) <- c(2,4)
m
m <- 1:10
dim(m) <- c(2,5)
m
x <- 1:3
y <- 10:12
m1 <- cbind(x,y)
m1
m2 <- rbind(x,y)
m2
m2[1]
m2[1,:]
m2[:,]
m2[:,1]
m2
m2$x
m2[1,1]
m2[1,2]
m2[1,3]
m2[2,1]
aaa<-m2[2,1]
aaa
aaa*2
class(aaa)
class(m1
)
class(m1)
m1
m1[1,x1]
m1[1,x.1]
m1[1,x(1)]
m1[1,x[1]]
clear()
clc()
x <- factor(c("yes","yes","no","yes","no"))
x
x <- factor(c("yes","yes","no","yes","no"))
table(x)
hist(table(x))
hist(x)
x
unclass(x)
x
attr(,"levels")
attr(x,"levels")
x <- 1:10
is.na(x)
is.nan(x)
x <- c(1,2, NA, 10, 3)
is.na(x)
is.nan(x)
x <- c(1,2, NA, NaN, 3)
is.na(x)
is.nan(x)
foo = 1:4
bar = c(T,T,T,T)
x <- data.frame(foo,bar)
x
x$foo
x <- 1:10
names(x)
x <- 1:10
names(x)
names(x) <- c("one","two","three","four","five","six","seven","eight","nine","ten")
print(x)
m <- maxtix(1:4, nrow=2,ncol=2)
dimnames(m) <- list(c("a","b"),c("c","d"))
m
m <- matrix(1:4, nrow=2,ncol=2)
v
dimnames(m) <- list(c("a","b"),c("c","d"))
m
m$a
m[a]]
m[a]
m[1]
x
x[1]
sep
x <- list(foo = 1:4, bar = 0.6)
x[1]
x[2]
x[[1]]
x$bar
x$foo
x <- list(foo = 1:4, bar = 0.6, baz = "hello")
x[c(1,3)]
name <- c("foo","baz")
x[name]
x[[name]]
x$name
x <- list( a = list(10,11,12), b=c(1,2,3,4,5))
x[[c(1,3)]] # = a[3] = 12
x[[1]][[3]] # = a[3]
x <- matrix(1:(2*3), 2, 3)
x[1,2, drop = FALSE]
x[1,, drop = FALSE]
x[,2, drop = FALSE]
x <- list(aardvark = 1:5)
x$a
x$a
x[["a",exact = FALSE]]
y <- c("a","b",NA,"d",NA,"f")
good <- complete.cases(x,y)
x <- c(1,2,NA,4,NA,5)
y <- c("a","b",NA,"d",NA,"f")
good <- complete.cases(x,y)
good
x[good]
y[good]
x <- 1:5
y <- 5:10
x + y
x * y
x >= 2
y < 10
x <- 1:5
y <- 6:10
x + y
x * y
x >= 2
y < 10
x
y
x+y
x*y
x>=2
y<10
x/2
rep(10,4)
x <- matrix(1:4, 2,2)
y <- matrix(rep(10,4),2,2)
# element-wise
x/y
x*y
x %*% y
swirl()
library("swirl")
ls()
rm(list=ls())
ls
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
(z*2+1000)
z*2+1000
my_div
getwd()
ls()
x <- 9
ls
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path()
file.path("mytest3.R")
play()
file.path("folder1")
file.path("folder1","folder2")
nxt()
file.path("folder1","folder2")
?dir.create
play()
dir()
dir.create(path = "testdir2",recursive = T)
dir
dir()
aaaa <- dir.create(path = "testdir2",recursive = T)
aaaa <- dir.create(path = "testdir3",recursive = T)
aaa
aaaa
rm(aaaa)
dir
ls
ls()
dir()
rm("testdir3/")
remove("testdir3/")
dir
dir()
file.remove("testdir3/")
?dir.create
?dir.remove
?dir.rm
?dir.
?dir
?ulink
dir.create(path = file.path(getwd(),"yourpath","yoursub"),recursive = TRUE)
dir(9)
dir()
cd("yourpath/")
list()
list.dirs("yourpath/")
nxt()
dir.create(path = file.path(getwd(),"testdir2","testdir3"),recursive = TRUE)
dir.create(path = file.path("testdir2","testdir3"),recursive = TRUE)
ulink("testdir2",recursive = TRUE)
unlink("testdir2",recursive = TRUE)
setwd(old.dir)
unlink("testdir/",recursive = T)
unlink("testdir",recursive = T)
unlink("testdir",recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
seq(5,10,length = 30)
my_seq <- seq(5,10,length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times = 40)
rep(c(0,1,2),times = 10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
tf2 <- num_vect >= 6
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name <- c(my_char,"miguel")
my_name
paste(my_name,collapse = " ")
paste("Hello","world!",sep = " ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep = "-")
x <- c(44, NA, 5, NA)
x*3
y<- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 1, bar = 2, norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix <- matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(data =  1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(data =  1:20, nrow = 4, ncol = 5)
info()
play()
matrix(1:20,nrow = 4,ncol=5)
nxt()
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol= 5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
4L
class(4L)
class(x <- c(4, "a", TRUE))
x <- c(1,3, 5) ; y <- c(3, 2, 10)
cbind(x,y)
class(cbind(x,y))
x <- list(2, "a", "b", TRUE)
x[[1]]
z <- x[[1]]
z
class(<)
class(z)
length(z)
x <- 1:4 ; y <- 2:3.
x+y
x
y
x <- c(3, 5, 1, 10, 12, 6)
x[x<6]
x[x<6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
getwd
getwd()
data <- read.csv("hw1_data.csv")
data
data[1,]
data[1:2,]
dim(data)
data[end,]
data[length(data)-2,]
length(data)
dim(data)[1]
data[dim(data)[1]-2,]
data[(dim(data)[1]-2):dim(data)[1],]
data[47,]
data[1,]
data[,1]
data$Ozone
is.na(data$Ozone)
sum(is.na(data$Ozone))
(data$ozone[!is.na(data$Ozone)])
(data$Ozone[!is.na(data$Ozone)])
mean(data$Ozone[!is.na(data$Ozone)])
is.na(data)
data2 <- data[!is.na(data)]
data2
data
t1 <- data$Ozone>31
t2 <- data$Temp>90
t1&t2
data[t1&t2]
data[t1 & t2]
t1
tf = t1 & t2
data$Solar.R[tf]
res <- data$Solar.R[tf]
mean(res[!is.na(res)])
t1 <- data$Month == 6
r1 <- data$Temp[t1]
r1
mean(r1[!is.na(r1)])
t1 <- data$Month == 5
r1 <- data$Temp[t1]
r1
max(r1)
r1 <- data$Ozone[t1]
max(r1)
max(r1[!is.na(r1)])
x <- 1:4; y <- 2:3
x+y
class(x+y)
