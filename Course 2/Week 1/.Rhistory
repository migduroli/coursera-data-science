install.packages("quantmod")
require(quantmod)
getSymbols("^GSPC", from = '1900-01-01')
s = yearlyReturn(GSPC)
dens = density(s)
plot(dens)
redfill = "#d66661"
redstroke = "#c93d39"  #not used
greenfill = "#6bab5b"
greenstroke = "#3b972e"  #not used
purplefill = "#aa7dc0"
purplestroke = "#945bb0"  #not used
q1 = -0.58
q2 = -0.1
q3 = 0.25
q4 = 0.62
x1 <- min(which(dens$x >= q1))
x2 <- max(which(dens$x <  q2))
x3 <- min(which(dens$x >= q3))
x4 <- max(which(dens$x <  q4))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=redfill))
with(dens, polygon(x=c(x[c(x2,x2:x3,x3)]), y= c(0, y[x2:x3], 0), col=greenfill))
with(dens, polygon(x=c(x[c(x3,x3:x4,x4)]), y= c(0, y[x3:x4], 0), col=purplefill))
s
plot(s)
require(quantmod)
getSymbols("^GSPC", from = '1900-01-01')
s = yearlyReturn(GSPC)
dens = density(s)
plot(dens)
redfill = "#d66661"
redstroke = "#c93d39"  #not used
greenfill = "#6bab5b"
greenstroke = "#3b972e"  #not used
purplefill = "#aa7dc0"
purplestroke = "#945bb0"  #not used
q1 = -0.58
q2 = -0.1
q3 = 0.25
q4 = 0.62
x1 <- min(which(dens$x >= q1))
x2 <- max(which(dens$x <  q2))
x3 <- min(which(dens$x >= q3))
x4 <- max(which(dens$x <  q4))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col=redfill))
with(dens, polygon(x=c(x[c(x2,x2:x3,x3)]), y= c(0, y[x2:x3], 0), col=greenfill))
with(dens, polygon(x=c(x[c(x3,x3:x4,x4)]), y= c(0, y[x3:x4], 0), col=purplefill))
r<-seq(0,1,0.1)
V<- (1/r)^6-(1/r)^(10)
r<-seq(0,0.1,0.01)
V<- (1/r)^6-(1/r)^(10)
plot(r,V)
r<-seq(0,0.1,0.001)
plot(r,V)
r<-seq(0,0.1,0.01)
V<- (1/r)^6-(1/r)^(10)
plot(r,V)
r<-seq(0,0.1,0.01)
r<-seq(0,0.1,0.001)
V<- (1/r)^6-(1/r)^(10)
plot(r,V)
r<-seq(0,0.01,0.001)
plot(r,V)
V<- (1/r)^6-(1/r)^(10)
r<-seq(0,0.01,0.001)
plot(r,V)
r<-seq(0,0.01,0.0001)
V<- (1/r)^6-(1/r)^(10)
plot(r,V)
r<-seq(0,0.001,0.00001)
plot(r,V)
V<- (1/r)^6-(1/r)^(10)
plot(r,V)
r<-seq(0,0.0001,0.0000001)
plot(r,V,"l")
V<- (1/r)^6-(1/r)^(10)
plot(r,V,"l")
plot(r,V,"l",log="x")
V<- (1/r)^12-(1/r)^(5)
plot(r,V,"l",log="x")
r<-seq(0,0.0001,1e-7)
r<-seq(0,1e-6,1e-7)
V<- (1/r)^12-(1/r)^(5)
plot(r,V,"l",log="x")
V<- 4*((1/r)^12-(1/r)^(5))
plot(r,V,"l",log="x")
seq(1,10)
seq(1,10)^2
seq(1,10)^(seq(1,10))
PresentValue <- function(cashFlow, rate)
{
N <- length(cashFlow)
powVec <- seq(0,N-1)
downVec <- cashFlow^(powVec)
PV <- cashFlow/downVec
return PV
}
PresentValue <- function(cashFlow, rate)
{
N <- length(cashFlow)
powVec <- seq(0,N-1)
downVec <- cashFlow^(powVec)
PV <- cashFlow/downVec
print(sum(PV))
}
x<-seq(1,10)
PresentValue(x,0.01)
PresentValue(10,0.01)
PresentValue(12,0.01)
PresentValue <- function(x,rate,n)
{
x/((1+rate)^n)
}
PresentValueCF <- function(cashFlow, rate)
{
N <- length(cashFlow)
powVec <- seq(0,N-1)
downVec <- cashFlow^(powVec)
PV <- cashFlow/downVec
print(sum(PV))
}
PresentValue <- function(x,rate,n=1)
{
x/((1+rate)^n)
}
PresentValueCF <- function(cashFlow, rate)
{
N <- length(cashFlow)
powVec <- seq(0,N-1)
downVec <- cashFlow^(powVec)
PV <- cashFlow/downVec
print(sum(PV))
}
PresentValue(10,0.1)
PresentValue(10,0.01)
PresentValue(10,0.001)
PresentValue(10,0.0001)
PresentValue(10,0.5)
10*(1+0.5)
PresentValue(15,0.5)
PresentValue <- function(x,rate,n=1)
{
x/((1+rate)^n)
}
PresentValueCF <- function(cashFlow, rate)
{
N <- length(cashFlow)
powVec <- seq(0,N-1)
downVec <- cashFlow^(powVec)
PV <- cashFlow/downVec
sum(PV)
}
priceContract(cashFlow, rateBorrow, rateLend=100)
{
price <- PresentValueCF(cashFlow,rateBorrow);
if (rateLend != 100)
{
priceUp <- PresentValueCF(cashFlow,rateLend);
priceDown <- PresentValueCF(cashFlow,rateBorrow);
price <- c(priceDown,priceUp);
}
price;
}
PresentValue <- function(x,rate,n=1)
{
x/((1+rate)^n)
}
PresentValueCF <- function(cashFlow, rate)
{
N <- length(cashFlow)
powVec <- seq(0,N-1)
downVec <- cashFlow^(powVec)
PV <- cashFlow/downVec
sum(PV)
}
priceContract <- function(cashFlow, rateBorrow, rateLend=100)
{
price <- PresentValueCF(cashFlow,rateBorrow);
if (rateLend != 100)
{
priceUp <- PresentValueCF(cashFlow,rateLend);
priceDown <- PresentValueCF(cashFlow,rateBorrow);
price <- c(priceDown,priceUp);
}
price;
}
x<-seq(1,10)
priceContract(x,0.1)
priceContract(x,0.01)
priceContract(x,rateBorrow = 0.1,rateLend = 0.05)
priceContract(x,rateBorrow = 0.1,rateLend = 0.01)
priceContract(x,rateBorrow = 0.1,rateLend = 0.001)
PresentValueCF(x,0.1)
PresentValueCF(x,0.01)
PresentValueCF(x,0.001)
PresentValueCF(x,005)
PresentValueCF(x,05)
PresentValueCF(x,0)
x
PresentValueCF <- function(cashFlow, rate)
{
N <- length(cashFlow)
powVec <- seq(0,N-1)
downVec <- numerics(N)
downVec[1:N] <- 1+rate
downVec <- downVec^(powVec)
PV <- cashFlow/downVec
sum(PV)
}
PresentValueCF(x,0.001)
numeric(2)
PresentValueCF <- function(cashFlow, rate)
{
N <- length(cashFlow)
powVec <- seq(0,N-1)
downVec <- numeric(N)
downVec[1:N] <- 1+rate
downVec <- downVec^(powVec)
PV <- cashFlow/downVec
sum(PV)
}
PresentValueCF(x,0)
PresentValueCF(x,0.1)
PresentValueCF(x,0.01)
priceContract(x,rateBorrow = 0.1,rateLend = 0.01)
seq(0,10-1)
lambda=c(300,350,400,450,500,550)
KE=c(3.2,2.27,1.53,1.01,0.56,0.12)
plot(lambda,KE)
plot(lambda,KE,"lp")
plot(lambda,KE)
plot(lambda,KE)
plot(lambda,KE,"l")
points(lambda,KE)
points(1/lambda,KE)
nu=1/lambda
points(nu,KE)
plot(nu,KE)
plot(nu,KE,"l")
points(nu,KE)
c=299792458000000000
nu=c/lambda
plot(nu,KE,"l")
nu250=c/250
Phi=3.5E-19
KE=KE*1e-19
points(nu,KE)
KE
plot(nu,KE,"l")
Phi
h= 6.26E-34
h*nu250
h*nu250-Phi
nu600=c/600
h*nu600-Phi
me= 9.1 x 10-31 kg.
me= 9.1E1-31
E250 = h*nu250-Phi
v250=sqrt(2*me*KE)
v250
v250=sqrt(2*me*E250)
v250
v250=sqrt(2*E250/m)
v250=sqrt(2*E250/me)
v2
v250
E250
me
me= 9.1E-31
v250=sqrt(2*E250/me)
v250
E600
PresentValue <- function(x,rate,n=1)
{
x/((1+rate)^n)
}
PresentValueCF <- function(cashFlow, rate)
{
N <- length(cashFlow)
powVec <- seq(0,N-1)
downVec <- numeric(N)
downVec[1:N] <- 1+rate
downVec <- downVec^(powVec)
PV <- cashFlow/downVec
sum(PV)
}
priceContract <- function(cashFlow, rateBorrow, rateLend=100)
{
price <- PresentValueCF(cashFlow,rateBorrow);
if (rateLend != 100)
{
priceUp <- PresentValueCF(cashFlow,rateLend);
priceDown <- PresentValueCF(cashFlow,rateBorrow);
price <- c(priceDown,priceUp);
}
price;
}
prize = numerics(20)
prize = numeric(20)
prize[1:20]=500
prize
priceContract(prize,10)
priceContract(prize,.10)
PresentValue(1000,0.12)
PresentValue(1000,0.12)
PresentValue(1000,0.12/12)
-1000/((1+0.12/12)^(7))
4033.15+990.099-932.71
PresentValue(900,0.12/12)
-900/((1+0.12/12)^(7))
3629.83+891.0891-839.44
4090.539-3681.479
1/(1.069^2)
(1+0.069)^2/(1+0.063)-1
400*(1+0.08/4)^3
priceContract(10000,rateBorrow = 0.1,rateLend = 0.08)
priceContract(10000,rateBorrow = 0.1, rateLend = 0.08)
priceContract(10000,rateBorrow = 1, rateLend = 8)
priceContract(10000,rateBorrow = 0.1, rateLend = 0.08)
priceContract(10,rateBorrow = 0.1, rateLend = 0.08)
priceContract(c(10,10),rateBorrow = 0.1, rateLend = 0.08)
10000/(0.1)
10000/(0.08)
(10000/0.1)-(10000/(0.08))
(10000/(0.08))
1/(1+0.1)
1/(1+0.1/2)
100*(1+0.1*0.5)^2
125*(1+0.5*0.1)
0.952381*(131.25-110.25)
x = [1:10]
x = seq(1,10)
x
ChemicalPotential <- function(Rho, Temp)
{
(1-(rho/2))/((1-rho)^3)
}
ChemicalPotential(0.05, 0.5)
ChemicalPotential <- function(Rho, Temp)
{
(1-(Rho/2))/((1-Rho)^3)
}
ChemicalPotential(0.05, 0.5)
solver(ChemicalPotential,0.05, 0.4)
Pressure <- function(Rho, Temp, CP)
{}
Pressure <- function(Rho, Temp, CP)
{
1+log(Rho)+(1-(Rho/2))/((1-Rho)^3)
}
Pressure <- function(Rho, Temp, CP)
{
1+CP*log(Rho)+(1-(Rho/2))/((1-Rho)^3)
}
install.packages("tufte", type = "source")
install.packages("rticles", type = "source")
install.packages("tufte", type = "source")
install.packages("tufte")
getwd()
setwd("H:/coursera-data-science/Course 2/Week 1")
source("Example1.R")
cor(airquality)
x <- 5
x
x = 5
x
x = 10
x
x = 10 <- 2
(x = 10) <- 2
1:10
1:0.1:10
1:0.11:10
1:0.01:10
seq(1,10,by = 0.)
seq(1,10,by = 0.1)
?vector()
?vector
is.vector(x)
vector(length = 10)
x <- vector(length = 10)
x
x <- vector(mode ="list"length = 10)
x <- vector(mode ="list",length = 10)
cx
x
x <- vector(mode ="expression",length = 10)
x
x <- vector(mode ="symbol",length = 10)
x <- vector(mode ="double",length = 10)
x
x <- vector(mode ="double",length = 10)
x(1)
x[2]
x[1:10]
x[1:12]
x[1:15]
x
name(x)
dimname(x)
dim(x)
x <- 1:10
dim(x)
class(x)
lentght(x)
length(x)
attributes(x)
attributes("x2)
attributes("x")
attributes("x")
x <- 0:6
class(x) # integer
as.numeric(x)
as.logical(x)
as.character(x)
x <- list(1, "a", TRUE, 1+2i)
x
x[1]
x[1,1]
x[1][1]
x[1]
x[2]
x[2:1]
m <- matrix(nrow = 2, ncol = 3)
dim(m)
attributes(m)
m <- matrix(1:10, nrow = 2, ncol = 10)
m
m <- matrix(1:10, nrow = 2, ncol = 5)
m
dim(m) <- c(2,5)
m
dim(m) <- c(2,4)
m
m <- 1:10
dim(m) <- c(2,5)
m
x <- 1:3
y <- 10:12
m1 <- cbind(x,y)
m1
m2 <- rbind(x,y)
m2
m2[1]
m2[1,:]
m2[:,]
m2[:,1]
m2
m2$x
m2[1,1]
m2[1,2]
m2[1,3]
m2[2,1]
aaa<-m2[2,1]
aaa
aaa*2
class(aaa)
class(m1
)
class(m1)
m1
m1[1,x1]
m1[1,x.1]
m1[1,x(1)]
m1[1,x[1]]
clear()
clc()
x <- factor(c("yes","yes","no","yes","no"))
x
x <- factor(c("yes","yes","no","yes","no"))
table(x)
hist(table(x))
hist(x)
x
unclass(x)
x
attr(,"levels")
attr(x,"levels")
x <- 1:10
is.na(x)
is.nan(x)
x <- c(1,2, NA, 10, 3)
is.na(x)
is.nan(x)
x <- c(1,2, NA, NaN, 3)
is.na(x)
is.nan(x)
foo = 1:4
bar = c(T,T,T,T)
x <- data.frame(foo,bar)
x
x$foo
x <- 1:10
names(x)
x <- 1:10
names(x)
names(x) <- c("one","two","three","four","five","six","seven","eight","nine","ten")
print(x)
m <- maxtix(1:4, nrow=2,ncol=2)
dimnames(m) <- list(c("a","b"),c("c","d"))
m
m <- matrix(1:4, nrow=2,ncol=2)
v
dimnames(m) <- list(c("a","b"),c("c","d"))
m
m$a
m[a]]
m[a]
m[1]
x
x[1]
sep
